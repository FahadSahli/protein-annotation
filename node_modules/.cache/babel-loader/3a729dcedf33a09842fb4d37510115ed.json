{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ec2-user/environment/web-tier-repository/src/Predictions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listProteinAnnotationTables } from './graphql/queries'; //const initialState  = { name: '', description: '' }\n\nfunction Predictions() {\n  _s();\n\n  //const [formState, setFormState] = useState(initialState)\n  const [predictions, setTodos] = useState([]);\n  useEffect(() => {\n    fetchPredictions();\n  }, []);\n\n  async function fetchPredictions() {\n    try {\n      const todoData = await API.graphql(graphqlOperation(listProteinAnnotationTables));\n      const predictions = todoData.data.listProteinAnnotationTables.items;\n      console.log(\"Predictions...\", predictions);\n      setTodos(predictions);\n    } catch (err) {\n      console.log('error fetching predictions');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 30\n      },\n      children: predictions.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.familyAccession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.confidence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.familyID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.inputSequence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.itemID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.userID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"End...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, note.familyAccession, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Predictions, \"JY3rSEW9H9euQp1xbRuAK8sf3dU=\");\n\n_c = Predictions;\nexport default Predictions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"sources":["/home/ec2-user/environment/web-tier-repository/src/Predictions.js"],"names":["useState","useEffect","API","graphqlOperation","withAuthenticator","AmplifySignOut","listProteinAnnotationTables","Predictions","predictions","setTodos","fetchPredictions","todoData","graphql","data","items","console","log","err","marginBottom","map","note","familyAccession","confidence","description","familyID","inputSequence","itemID","userID"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAuC,aAAvC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,uBAAlD;AACA,SAASC,2BAAT,QAA4C,mBAA5C,C,CAGA;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAErB;AACA,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,gBAAf,GAAkC;AAChC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,OAAJ,CAAYT,gBAAgB,CAACG,2BAAD,CAA5B,CAAvB;AACA,YAAME,WAAW,GAAGG,QAAQ,CAACE,IAAT,CAAcP,2BAAd,CAA0CQ,KAA9D;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,WAA9B;AAEAC,MAAAA,QAAQ,CAACD,WAAD,CAAR;AACD,KAND,CAME,OAAOS,GAAP,EAAY;AAAEF,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAA2C;AAC5D;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,YAAY,EAAE;AAAf,OAAZ;AAAA,gBAEIV,WAAW,CAACW,GAAZ,CAAgBC,IAAI,iBAClB;AAAA,gCACE;AAAA,oBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAIJ,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAIN,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAAUP,IAAI,CAACC,eAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA1CQd,W;;KAAAA,W;AA4CT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport { API, graphqlOperation  } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listProteinAnnotationTables } from './graphql/queries';\n\n\n//const initialState  = { name: '', description: '' }\n\nfunction Predictions() {\n  \n  //const [formState, setFormState] = useState(initialState)\n  const [predictions, setTodos] = useState([])\n \n\n  useEffect(() => {\n    fetchPredictions()\n  }, [])\n\n  async function fetchPredictions() {\n    try {\n      const todoData = await API.graphql(graphqlOperation(listProteinAnnotationTables))\n      const predictions = todoData.data.listProteinAnnotationTables.items\n      console.log(\"Predictions...\", predictions)\n      \n      setTodos(predictions)\n    } catch (err) { console.log('error fetching predictions') }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Predictions</h1>\n      <div style={{marginBottom: 30}}>\n        {\n          predictions.map(note => (\n            <div key={note.familyAccession}>\n              <p>{note.familyAccession}</p>\n              <p>{note.confidence}</p>\n              <p>{note.description}</p>\n              <p>{note.familyID}</p>\n              <p>{note.inputSequence}</p>\n              <p>{note.itemID}</p>\n              <p>{note.userID}</p>\n              <p>End...</p>\n            </div>\n          ))\n        }\n      </div>\n      \n    </div>\n  );\n}\n\nexport default Predictions;"]},"metadata":{},"sourceType":"module"}