{"ast":null,"code":"/**\n * Checks if the given value is a Smithy structure of the given type.\n */\nexport function isa(o) {\n  var ids = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    ids[_i - 1] = arguments[_i];\n  }\n\n  return typeof o === \"object\" && ( // Checks for name after __type, as name is used instead for errors.\n  \"__type\" in o && ids.indexOf(o[\"__type\"]) > -1 || \"name\" in o && ids.indexOf(o[\"name\"]) > -1);\n}","map":{"version":3,"sources":["../../src/isa.ts"],"names":[],"mappings":"AAAA;;AAEG;AACH,OAAM,SAAU,GAAV,CAAiB,CAAjB,EAAuB;AAAE,MAAA,GAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAgB;AAAhB,IAAA,GAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAC7B,SACE,OAAO,CAAP,KAAa,QAAb,MACA;AACE,cAAY,CAAZ,IAAiB,GAAG,CAAC,OAAJ,CAAY,CAAC,CAAC,QAAD,CAAb,IAA2B,CAAC,CAA9C,IAAqD,UAAU,CAAV,IAAe,GAAG,CAAC,OAAJ,CAAY,CAAC,CAAC,MAAD,CAAb,IAAyB,CAAC,CAF/F,CADF;AAKD","sourcesContent":["/**\n * Checks if the given value is a Smithy structure of the given type.\n */\nexport function isa<T>(o: any, ...ids: string[]): o is T {\n  return (\n    typeof o === \"object\" &&\n    // Checks for name after __type, as name is used instead for errors.\n    ((\"__type\" in o && ids.indexOf(o[\"__type\"]) > -1) || (\"name\" in o && ids.indexOf(o[\"name\"]) > -1))\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}